// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // compute out[t+1] + 1 using register output
    Inc16(in=regOut, out=outPlusOne);

    // use mux to compute if else statement, starting with last else for the load flags
    Mux16(a=false, b=outPlusOne, sel=inc, out=muxOne);
    Mux16(a=muxOne, b=in, sel=load, out=muxTwo);
    Mux16(a=muxTwo, b=false, sel=reset, out=logicIn);

    // use or to determine if none of the load flags are set
    Or(a=reset, b=load, out=resetOrLoad);
    Or(a=resetOrLoad, b=inc, out=resetOrLoadOrInc);

    Register(in=logicIn, load=resetOrLoadOrInc, out=out, out=regOut);
}

// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[0..2], a=loadOne, b=loadTwo, c=loadThree, d=loadFour, e=loadFive, f=loadSix, g=loadSeven, h=loadEight);
    RAM512(in=in, load=loadOne, address=address[3..11], out=outOne);
    RAM512(in=in, load=loadTwo, address=address[3..11], out=outTwo);
    RAM512(in=in, load=loadThree, address=address[3..11], out=outThree);
    RAM512(in=in, load=loadFour, address=address[3..11], out=outFour);
    RAM512(in=in, load=loadFive, address=address[3..11], out=outFive);
    RAM512(in=in, load=loadSix, address=address[3..11], out=outSix);
    RAM512(in=in, load=loadSeven, address=address[3..11], out=outSeven);
    RAM512(in=in, load=loadEight, address=address[3..11], out=outEight);
    Mux8Way16(a=outOne, b=outTwo, c=outThree, d=outFour, e=outFive, f=outSix, g=outSeven, h=outEight, sel=address[0..2], out=out);
}